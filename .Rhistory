print(paste("\\colorbox{orange}{",characters[i], "}", sep=''))
#print(paste(characters[i], "duplicate firstname"))
rm.indx.dupname <- c(rm.indx.dupname, i)
}
}
}
# check the last name
appear <- sum(str_count(book, characters[length(characters)]))
if (appear < 2){
print(paste("\\colorbox{pink}{",characters[length(characters)], "}"))
#print(paste(characters[length(characters)], "appear1"))
rm.indx.appear1 <- c(rm.indx.appear1, length(characters))
}
characters <- unlist(str_replace_all(characters, "Alain[^ de Pareilles]", "Alain de Pareilles"))
unlist(str_extract_all(book, "Alain[^ de Pareilles]")
)
unlist(str_extract_all(book,  "Guccio[^ Baglioni]|[^Guccio ]Baglioni")
)
unlist(str_extract_all(book,  "Guccio[^ Baglioni]|[^Guccio] Baglioni")
)
book <- unlist(str_replace_all(book, "Guccio Baglioni|Guccio|Baglioni", "Guccio Baglioni"))
unlist(str_extract_all(book,  "Guccio[^ Baglioni]|[^Guccio] Baglioni"))
book <- unlist(str_replace_all(book, "Beatrice [^d'Hirson]", "Beatrice d'Hirson"))
unlist(str_extract_all(book,  "Beatrice [^d'Hirson]"))
book <- unlist(str_replace_all(book, "Boniface [^VIII]", "Boniface 'VIII"))
unlist(str_extract_all(book,  "Balioni "))
unlist(str_extract_all(book,  "Baglioni Baglioni"))
unlist(str_extract_all(book,  "Baglioni Guccio"))
book <- unlist(str_replace_all(book, "Charles de Valois|de Valois|Valois", "Charles de Valois"))
unlist(str_extract_all(book,  "[^de] Valois"))
characters
unlist(str_extract_all(book,  "Beatrice [^d'Hirson]"))
book <- readLines("les_rois_maudits/txt_cut/[Rois Maudits-1] Le Roi de fer - Druon,Maurice.txt",
encoding = 'UTF-8')
unlist(str_extract_all(book,  "Beatrice [^d'Hirson]"))
book <- unlist(str_replace_all(book, "Beatrice d'Hirson|Beatrice", "Beatrice d'Hirson"))
unlist(str_extract_all(book,  "Beatrice [^d'Hirson]"))
characters <- unlist(str_replace_all(book, "Blanche", "Blanche de Bourgogne"))
characters <- readLines("les_rois_maudits/characters/characters1.txt")
characters <- unlist(str_replace_all(characters, "Blanche", "Blanche de Bourgogne"))
characters
book <- readLines("les_rois_maudits/txt_cut/[Rois Maudits-1] Le Roi de fer - Druon,Maurice.txt",
encoding = 'UTF-8')
temp <- removePunctuation(book)
sum(str_count(temp, " Isabelle "))
sum(str_count(temp, " Isabelle"))
sum(str_count(temp, "dIsabelle"))
stopwords(french)
stopwords('french')
temp <- removeWords(book, stopwords('french'))
temp <- removePunctuation(temp)
sum(str_count(temp, "dIsabelle"))
sum(str_count(temp, " Isabelle"))
sum(str_count(temp, "Isabelle"))
sum(str_count(temp, ".Isabelle")
)
sum(str_count(temp, "Isabelle ")
)
sum(str_count(temp, "^Isabelle ")
)
unlist(str_extract_all(book, "Jean[^de][^du][l']"))
unlist(str_extract_all(book, "Jean[^de][^du][l']."))
unlist(str_extract_all(book, "Jean[^de][^du][l']......."))
unlist(str_extract_all(book, "[^Philippe] le Bel"))
unlist(str_extract_all(book, "Robert [^d'Artois]....."))
unlist(str_extract_all(book, "Robert [^d'Artois]................"))
unlist(str_extract_all(book, "l'hotel d'Artois"))
unlist(str_extract_all(book, "comtesse de Bourgogne et d'Artois"))
unlist(str_extract_all(book, "Robert de Bethune"))
unlist(str_extract_all(book, "de Bethune"))
unlist(str_extract_all(book, "[Dd]'Artois"))
unlist(str_extract_all(book, "le roi [A-Z].........."))
unlist(str_extract_all(book, "le roi[^A-Z]"))
unlist(str_extract_all(book, "le roi [^A-Z]"))
which(gepl(book, "le roi [^A-Z]")==TRUE)
which(grepl(book, "le roi [^A-Z]")==TRUE)
which(str_detect(book, "le roi [^A-Z]")==TRUE)
which(str_detect(book, "le roi[:punct:]")==TRUE)
c(which(str_detect(book, "le roi [^A-Z]")==TRUE), which(str_detect(book, "le roi[:punct:]")==TRUE))
leroi <- c(which(str_detect(book, "le roi [^A-Z]")==TRUE), which(str_detect(book, "le roi[:punct:]")==TRUE))
book[leroi] <- unlist(str_replace_all(book[leroi], "le roi", "Philippe IV"))
c(which(str_detect(book, "le roi [^A-Z]")==TRUE), which(str_detect(book, "le roi[:punct:]")==TRUE))
list.of.packages <- c("stringr", "rstudioapi")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages, repos = "http://cran.rstudio.com/")
# set working directory
this.dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(this.dir)
rm(list=ls())
# import library
library(stringr)
#### Read the txt files ####
book <- readLines("les_rois_maudits/txt_cut/[Rois Maudits-1] Le Roi de fer - Druon,Maurice.txt",
encoding = 'UTF-8')
characters <- readLines("les_rois_maudits/characters/characters1.txt")
characters.mat <- str_split(characters, " ", simplify = TRUE)
#### Automatic cleaning ####
rm.indx.appear1 <- c()
rm.indx.dupname <- c()
for (i in 1:(length(characters)-1)){
# if the name appear only 1 times => remove
appear <- sum(str_count(book, characters[i]))
if (appear < 2){
#print(paste(characters[i], "appear 1"))
print(paste("\\colorbox{pink}{",characters[i], "}", sep=''))
rm.indx.appear1 <- c(rm.indx.appear1, i)
}
else{
# if the name appear has only firstname and the firstname is duplicated => remove
if (characters.mat[i,2]=="" & characters.mat[i+1,1] == characters.mat[i,1]){
print(paste("\\colorbox{orange}{",characters[i], "}", sep=''))
#print(paste(characters[i], "duplicate firstname"))
rm.indx.dupname <- c(rm.indx.dupname, i)
}
}
}
# check the last name
appear <- sum(str_count(book, characters[length(characters)]))
if (appear < 2){
print(paste("\\colorbox{pink}{",characters[length(characters)], "}"))
#print(paste(characters[length(characters)], "appear1"))
rm.indx.appear1 <- c(rm.indx.appear1, length(characters))
}
#### Manual cleaning ####
## Replace Alain with Alain de Pareilles
book <- unlist(str_replace_all(book, "Alain de Pareilles|Alain", "Alain de Pareilles"))
## Remove Amaury (appear only once as a character and once as a place)
rm.indx.extra <- c(3)
## Relace Baglioni and Guccio Baglioni with Guccio
book <- unlist(str_replace_all(book, "Guccio Baglioni|Guccio|Baglioni", "Guccio Baglioni"))
rm.indx.extra <- c(rm.indx.extra, 6)
## Replace Beatrice with Beatrice d'Hirson
book <- unlist(str_replace_all(book, "Beatrice d'Hirson|Beatrice", "Beatrice d'Hirson"))
## Replace Blanche with Blanche de Bourgogne
book <- unlist(str_replace_all(book, "Blanche de Bourgogne|Blanche", "Blanche de Bourgogne"))
characters <- unlist(str_replace_all(characters, "Blanche", "Blanche de Bourgogne"))
## Replace Boniface with Boniface VVV
book <- unlist(str_replace_all(book, "Boniface VIII|Boniface", "Boniface VIII"))
## Replace 'de Valois', 'Valois' with Charles de Valois, remove Monseigneur de Valois, Valois, de Valois
book <- unlist(str_replace_all(book, "Charles de Valois|de Valois|Valois", "Charles de Valois"))
rm.indx.extra <- c(rm.indx.extra, 74, 110)
## Replace Eliabel, dame de Cressay, Madame de Cressay with Eliabel de Cressay
book <- unlist(str_replace_all(book, "Eliabel de Cressay|Eliabel|[Mm]adame de Cressay|dame de Cressay", "Eliabel de Cressay"))
characters <- unlist(str_replace_all(characters, "Eliabel", "Eliabel de Cressay"))
## Replace Enguerrand with Enguerrand de Marigny
book <- unlist(str_replace_all(book, "Enguerrand de Marigny|Enguerrand", "Enguerrand de Marigny"))
## Replace the character Frere Renaud with Renaud
characters <- unlist(str_replace_all(characters, "Frere Renaud", "Renaud"))
## Replace Gautier d'Aunay le pere with GautierdAunaylePere to seperate this
# characer from his son
book <- unlist(str_replace_all(book, "Gautier d'Aunay le pere", "GautierdAunaylePere"))
## Gautier -> Gautier d'Aunay
book <- unlist(str_replace_all(book, "Gautier ", "Gautier d'Aunay "))
## Replace de Nogaret, Nogaret with Guillaume de Nogaret
book <- unlist(str_replace_all(book, "Guillaume de Nogaret|de Nogaret|Nogaret", "Guillaume de Nogaret"))
## Replace de Bouille with Hugues de Bouville
book <- unlist(str_replace_all(book, "Hugues de Bouville|de Bouville|Bouville", "Hugues de Bouville"))
## Replace Jacques, de Molay, Molay with Jacques de Molay
book <- unlist(str_replace_all(book, "Jacques de Molay|de Molay|Molay|Jacques", "Jacques de Molay"))
## Jeanne -> Jeanne de Bourgogne
book <- unlist(str_replace_all(book, "Jeanne de Bourgogne|Jeanne", "Jeanne de Bourgogne"))
characters <- unlist(str_replace_all(characters, "Jeanne", "Jeanne de Bourgogne"))
## Hutin, Louis Hutin, Louis de Navarre -> Louis V
# roi de Navarre -> roi Louis V (for word2vec)
# Monseigneur de Navarre -> Monseigneur Louis V (for word2vec)
book <- unlist(str_replace_all(book, "Louis Hutin|Hutin|Louis de Navarre", "Louis V"))
book <- unlist(str_replace_all(book, "roi de Navarre", "roi Louis V"))
book <- unlist(str_replace_all(book, "Monseigneur de Navarre", "Monseigneur Louis V"))
characters <- c(characters, "Louis V")
rm.indx.extra <- c(rm.indx.extra, 53, 56)
#delete character 'de Navarre'
rm.indx.extra <- c(rm.indx.extra, 111)
## d'Evreux -> Louis d'Evreux
book <- unlist(str_replace_all(book, "Louis d'Evreux|d'Evreux", "Louis d'Evreux"))
## Marguerite, Marguerite de Navarre -> Marguerite de Bourgogne
# reine de Navarre -> reine Marguerite de Bourgogne
book <- unlist(str_replace_all(book, "Marguerite de Bourgogne|Marguerite", "Marguerite de Bourgogne"))
book <- unlist(str_replace_all(book, "reine de Navarre", "reine Marguerite de Bourgogne"))
characters <- unlist(str_replace_all(characters, "Marguerite", "Marguerite de Bourgogne"))
## Marie -> Marie de Cressay
book <- unlist(str_replace_all(book, "Marie de Cressay|Marie", "Marie de Cressay"))
## remove characters containning "Monseigneur", "Messire" (if not already remove), remove Magrigny
rm.indx.extra <- c(rm.indx.extra, 61, 64, 65, 67:69, 71:74)
## Character Pape Clement -> Clement
characters <- unlist(str_replace_all(characters, "Pape Clement", "Clement"))
## Philippe le Bel, Philippe quatrieme -> Philippe IV
book <- unlist(str_replace_all(book, "Philippe le Bel|Philippe quatrieme", "Philippe IV"))
characters <- unlist(str_replace_all(characters, "Philippe le Bel", "Philippe IV"))
## compte(Monsigneur) de Poitiers -> comte(Monsigneur) Philippe de Poitiers
book <- unlist(str_replace_all(book, "comte de Poitiers", "compte Philippe de Poitiers"))
book <- unlist(str_replace_all(book, "Monseigneur de Poitiers", "Monseigneur Philippe de Poitiers"))
## Madame(comtesse) de Poitiers -> Madame(comtesse) Jeanne de Bourgogne
book <- unlist(str_replace_all(book, "comtesse de Poitiers", "comptesse Jeanne de Bourgogne"))
book <- unlist(str_replace_all(book, "Madame de Poitiers", "Madame Jeanne de Bourgogne"))
## Mahaut, Mahaut d'Artois, comtesse d'Artois -> Mahaut de Bourgogne
book <- unlist(str_replace_all(book, "Mahaut de Bourgogne|Mahaut d'Artois|Mahaut|comtesse d'Artois",
"Mahaut de Bourgogne"))
characters <- c(characters, "Mahaut de Bourgogne")
## Robert, d(D)'Artois -> Robert d'Artois (except l'hotel d'Artois, comtesse de Bourgogne et d'Artois, Robert de Bethune)
book <- unlist(str_replace_all(book, "l'hotel d'Artois", "l'hotel Artois"))
book <- unlist(str_replace_all(book, "Robert de Bethune", "deBethune"))
book <- unlist(str_replace_all(book, "comtesse de Bourgogne et d'Artois", "comtesse de Bourgogne et Artois"))
book <- unlist(str_replace_all(book, "Robert d'Artois|Robert|[Dd]'Artois", "Robert Artois"))
## remove Santa Maria
rm.indx.extra <- c(rm.indx.extra, 103)
## Spinello, Tolomei -> Spinello Tolomei
book <- unlist(str_replace_all(book, "Spinello Tolomei|Spinello|Tolomei", "Spinello Tolomei"))
## Thierry -> Thierry d'Hirson
book <- unlist(str_replace_all(book, "Thierry", "Thierry d'Hirson"))
## 'le roi' without name after (Edouard, Louis or Philippe) -> Philipple IV
leroi <- c(which(str_detect(book, "le roi [^A-Z]")==TRUE), which(str_detect(book, "le roi[:punct:]")==TRUE))
book[leroi] <- unlist(str_replace_all(book[leroi], "le roi", "Philippe IV"))
edouard <- <- c(which(str_detect(book, "Edouard[^ II]")==TRUE))
edouard <- c(which(str_detect(book, "Edouard[^ II]")==TRUE))
edouard <- c(which(str_detect(book, "Edouard[^( II)]")==TRUE))
leroi <- c(which(str_detect(book, "le roi [^[A-Z]]")==TRUE), which(str_detect(book, "le roi[:punct:]")==TRUE))
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
edouard <- c(which(str_detect(book, "Edouard[^[:blank:]II]")==TRUE))
edouard <- c(which(str_detect(book, "Edouard[^[( II)]")==TRUE))
edouard <- c(which(str_detect(book, "Edouard[^[( II)]]")==TRUE))
edouard <- c(which(str_detect(book, "Edouard II")==TRUE))
edouard <- c(which(str_detect(book, "Edouard II")==TRUE))
str_detect(book, "Edouard II")
edouard <- which(str_detect(book, "Edouard")==TRUE)
father <- edouard [! edouard %in% son]
son <- c(3969, 3977)
edouard <- which(str_detect(book, "Edouard")==TRUE)
book[son] <- unlist(str_replace_all(book[son], "Edouard", "EdouardIII"))
father <- edouard [! edouard %in% son]
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
characters
characters <- characters[-c(rm.indx.appear1, rm.indx.dupname, rm.indx.extra)]
characters
book <- unlist(str_replace_all(book, "reine d'Angleterre", "reine Isabelle"))
book <- unlist(str_replace_all(book, "reine d'Angleterre", "reine Isabelle"))
characters <- characters[-c(rm.indx.appear1, rm.indx.dupname, rm.indx.extra)]
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
characters
clean.char <- unlist(str_replace(characters, "[:blank:]", ""))
clean.char <- unlist(str_replace_all(characters, "[:blank:]", ""))
clean.char <- removePunctuation(clean.char)
clean.char <- content_transformer(tolower, clean.char)
clean.char <- sapply(clean.char, tolower)
clean.char <- unlist(str_replace_all(characters, "[:blank:]", ""))
clean.char <- removePunctuation(clean.char)
clean.char <- sapply(clean.char, tolower, USE.NAMES = F)
char.tab <- cbind(Character = characters, lowercase = clean.char)
char.tab
write.table(char.tab, file = "les_rois_maudits/characters/characters1_clean.txt",
quote = F, col.names = T, row.names = F)
write.table(char.tab, file = "les_rois_maudits/characters/characters1_clean.txt",
quote = F, col.names = T, row.names = F, sep = "\t")
characters <- readLines("les_rois_maudits/characters/characters1.txt")
characters
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
read.table(file = "les_rois_maudits/characters/characters1_clean.txt", header = T, sep='\t')
a <- read.table(file = "les_rois_maudits/characters/characters1_clean.txt", header = T, sep='\t')
write.table(char.tab, file = "les_rois_maudits/characters/characters1_clean.txt",
quote = F, col.names = T, row.names = F, sep = ",")
a <- read.table(file = "les_rois_maudits/characters/characters1_clean.txt", header = T, sep=',')
a <- read.table(file = "les_rois_maudits/characters/characters1_clean.txt", header = T, sep=',')
write.table(characters, file = "les_rois_maudits/characters/characters1_clean.txt")
writeLines(characters, file = "les_rois_maudits/characters/characters1_clean.txt")
writeLines(characters, "les_rois_maudits/characters/characters1_clean.txt")
writeLines(clean.char, "les_rois_maudits/characters/characters1_clean_lowercase.txt")
for (i in 1:length(characters)){
book <- unlist(str_replace_all(book, characters[i], clean.char[i]))
}
dir.create("les_rois_maudits/final_txt/", showWarnings = FALSE)
writeLines(book, "les_rois_maudits/final_txt/[Rois Maudits-1] Le Roi de fer - Druon,Maurice.txt")
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
stopword("french")
stopwords("french")
stopwords_fr <- readLines("Stop-words-french-utf8.txt")
cressay <- which(str_detect(book, "Pierre et Jean")==TRUE)
book <- readLines("les_rois_maudits/txt_cut/[Rois Maudits-1] Le Roi de fer - Druon,Maurice.txt",
encoding = 'UTF-8')
characters <- readLines("les_rois_maudits/characters/characters1.txt")
characters.mat <- str_split(characters, " ", simplify = TRUE)
#######################################################################
####                  Automatic cleaning                           ####
#######################################################################
rm.indx.appear1 <- c()
rm.indx.dupname <- c()
for (i in 1:(length(characters)-1)){
# if the name appear only 1 times => remove
appear <- sum(str_count(book, characters[i]))
if (appear < 2){
#print(paste(characters[i], "appear 1"))
rm.indx.appear1 <- c(rm.indx.appear1, i)
}
else{
# if the name appear has only firstname and the firstname is duplicated => remove
if (characters.mat[i,2]=="" & characters.mat[i+1,1] == characters.mat[i,1]){
#print(paste(characters[i], "duplicate firstname"))
rm.indx.dupname <- c(rm.indx.dupname, i)
}
}
}
# check the last name
appear <- sum(str_count(book, characters[length(characters)]))
if (appear < 2){
#print(paste(characters[length(characters)], "appear1"))
rm.indx.appear1 <- c(rm.indx.appear1, length(characters))
}
#######################################################################
####                    Manual cleaning                            ####
#######################################################################
## Replace Alain with Alain de Pareilles
book <- unlist(str_replace_all(book, "Alain de Pareilles|Alain", "Alain de Pareilles"))
## Remove Amaury (appear only once as a character and once as a place)
rm.indx.extra <- c(3)
## Relace Baglioni and Guccio Baglioni with Guccio
book <- unlist(str_replace_all(book, "Guccio Baglioni|Guccio|Baglioni", "Guccio Baglioni"))
rm.indx.extra <- c(rm.indx.extra, 6)
## Replace Beatrice with Beatrice d'Hirson
book <- unlist(str_replace_all(book, "Beatrice d'Hirson|Beatrice", "Beatrice d'Hirson"))
## Replace Blanche with Blanche de Bourgogne
book <- unlist(str_replace_all(book, "Blanche de Bourgogne|Blanche", "Blanche de Bourgogne"))
characters <- unlist(str_replace_all(characters, "Blanche", "Blanche de Bourgogne"))
## Replace Boniface with Boniface VVV
book <- unlist(str_replace_all(book, "Boniface VIII|Boniface", "Boniface VIII"))
## Replace 'de Valois', 'Valois' with Charles de Valois, remove Monseigneur de Valois, Valois, de Valois
book <- unlist(str_replace_all(book, "Charles de Valois|de Valois|Valois", "Charles de Valois"))
rm.indx.extra <- c(rm.indx.extra, 74, 110)
## Replace Eliabel, dame de Cressay, Madame de Cressay with Eliabel de Cressay
book <- unlist(str_replace_all(book, "Eliabel de Cressay|Eliabel|[Mm]adame de Cressay|dame de Cressay", "Eliabel de Cressay"))
characters <- unlist(str_replace_all(characters, "Eliabel", "Eliabel de Cressay"))
## Replace Enguerrand with Enguerrand de Marigny
book <- unlist(str_replace_all(book, "Enguerrand de Marigny|Enguerrand", "Enguerrand de Marigny"))
## Replace the character Frere Renaud with Renaud
characters <- unlist(str_replace_all(characters, "Frere Renaud", "Renaud"))
## Replace Gautier d'Aunay le pere with GautierdAunaylePere to seperate this
# characer from his son
book <- unlist(str_replace_all(book, "Gautier d'Aunay le pere", "GautierdAunaylePere"))
## Gautier -> Gautier d'Aunay
book <- unlist(str_replace_all(book, "Gautier ", "Gautier d'Aunay "))
## Replace de Nogaret, Nogaret with Guillaume de Nogaret
book <- unlist(str_replace_all(book, "Guillaume de Nogaret|de Nogaret|Nogaret", "Guillaume de Nogaret"))
## Replace de Bouille with Hugues de Bouville
book <- unlist(str_replace_all(book, "Hugues de Bouville|de Bouville|Bouville", "Hugues de Bouville"))
## Replace Jacques, de Molay, Molay with Jacques de Molay
book <- unlist(str_replace_all(book, "Jacques de Molay|de Molay|Molay|Jacques", "Jacques de Molay"))
## Jeanne -> Jeanne de Bourgogne
book <- unlist(str_replace_all(book, "Jeanne de Bourgogne|Jeanne", "Jeanne de Bourgogne"))
characters <- unlist(str_replace_all(characters, "Jeanne", "Jeanne de Bourgogne"))
## Hutin, Louis Hutin, Louis de Navarre -> Louis V
# roi de Navarre -> roi Louis V (for word2vec)
# Monseigneur de Navarre -> Monseigneur Louis V (for word2vec)
book <- unlist(str_replace_all(book, "Louis Hutin|Hutin|Louis de Navarre", "Louis V"))
book <- unlist(str_replace_all(book, "roi de Navarre", "roi Louis V"))
book <- unlist(str_replace_all(book, "Monseigneur de Navarre", "Monseigneur Louis V"))
characters <- c(characters, "Louis V")
rm.indx.extra <- c(rm.indx.extra, 53, 56)
#delete character 'de Navarre'
rm.indx.extra <- c(rm.indx.extra, 111)
## d'Evreux -> Louis d'Evreux
book <- unlist(str_replace_all(book, "Louis d'Evreux|d'Evreux", "Louis d'Evreux"))
## Marguerite, Marguerite de Navarre -> Marguerite de Bourgogne
# reine de Navarre -> reine Marguerite de Bourgogne
book <- unlist(str_replace_all(book, "Marguerite de Bourgogne|Marguerite", "Marguerite de Bourgogne"))
book <- unlist(str_replace_all(book, "reine de Navarre", "reine Marguerite de Bourgogne"))
characters <- unlist(str_replace_all(characters, "Marguerite", "Marguerite de Bourgogne"))
## Marie -> Marie de Cressay
book <- unlist(str_replace_all(book, "Marie de Cressay|Marie", "Marie de Cressay"))
## remove characters containning "Monseigneur", "Messire" (if not already remove), remove Magrigny
rm.indx.extra <- c(rm.indx.extra, 61, 64, 65, 67:69, 71:74)
## Character Pape Clement -> Clement
characters <- unlist(str_replace_all(characters, "Pape Clement", "Clement"))
## Philippe le Bel, Philippe quatrieme -> Philippe IV
book <- unlist(str_replace_all(book, "Philippe le Bel|Philippe quatrieme", "Philippe IV"))
characters <- unlist(str_replace_all(characters, "Philippe le Bel", "Philippe IV"))
## compte(Monsigneur) de Poitiers -> comte(Monsigneur) Philippe de Poitiers
book <- unlist(str_replace_all(book, "comte de Poitiers", "compte Philippe de Poitiers"))
book <- unlist(str_replace_all(book, "Monseigneur de Poitiers", "Monseigneur Philippe de Poitiers"))
## Madame(comtesse) de Poitiers -> Madame(comtesse) Jeanne de Bourgogne
book <- unlist(str_replace_all(book, "comtesse de Poitiers", "comptesse Jeanne de Bourgogne"))
book <- unlist(str_replace_all(book, "Madame de Poitiers", "Madame Jeanne de Bourgogne"))
## Mahaut, Mahaut d'Artois, comtesse d'Artois -> Mahaut de Bourgogne
book <- unlist(str_replace_all(book, "Mahaut de Bourgogne|Mahaut d'Artois|Mahaut|comtesse d'Artois",
"Mahaut de Bourgogne"))
characters <- c(characters, "Mahaut de Bourgogne")
## Robert, d(D)'Artois -> Robert d'Artois (except l'hotel d'Artois, comtesse de Bourgogne et d'Artois, Robert de Bethune)
book <- unlist(str_replace_all(book, "l'hotel d'Artois", "l'hotel Artois"))
book <- unlist(str_replace_all(book, "Robert de Bethune", "deBethune"))
book <- unlist(str_replace_all(book, "comtesse de Bourgogne et d'Artois", "comtesse de Bourgogne et Artois"))
book <- unlist(str_replace_all(book, "Robert d'Artois|Robert|[Dd]'Artois", "Robert d'Artois"))
## remove Martin, Marigny, Santa Maria
rm.indx.extra <- c(rm.indx.extra, 62, 63, 103)
## Spinello, Tolomei -> Spinello Tolomei
book <- unlist(str_replace_all(book, "Spinello Tolomei|Spinello|Tolomei", "Spinello Tolomei"))
## Thierry -> Thierry d'Hirson
book <- unlist(str_replace_all(book, "Thierry", "Thierry d'Hirson"))
## reine d'Angleterre -> reine Isabelle
book <- unlist(str_replace_all(book, "reine d'Angleterre", "reine Isabelle"))
## 'le roi' without name after (Edouard, Louis or Philippe) -> Philipple IV
leroi <- c(which(str_detect(book, "le roi [^[A-Z]]")==TRUE), which(str_detect(book, "le roi[:punct:]")==TRUE))
book[leroi] <- unlist(str_replace_all(book[leroi], "le roi", "Philippe IV"))
## Seperate Edouard
edouard <- which(str_detect(book, "Edouard")==TRUE)
son <- c(3969, 3977)
book[son] <- unlist(str_replace_all(book[son], "Edouard", "Edouard III"))
father <- edouard [! edouard %in% son]
book[father] <- unlist(str_replace_all(book[father], "Edouard II|Edouard", "Edouard II"))
characters <- c(characters, 'Edouard III')
cressay <- which(str_detect(book, "Pierre et Jean")==TRUE)
cressay <- which(str_detect(book, "Pierre, et Jean")==TRUE)
cressay <- which(str_detect(book, "Jean et Pierre")==TRUE)
cressay <- which(str_detect(book, "Pierre et Jean")==TRUE)
cressay <- c(cressay, 5132)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
brothers <- c(which(str_detect(book, "[xs] d'Aunay")==TRUE)))
brothers <- c(which(str_detect(book, "[xs] d'Aunay")==TRUE))
brothers <- c(which(str_detect(book, "d'Aunay[ [:punct:]]")==TRUE))
book <-  unlist(str_replace_all(book, "d'Aunay-", "Aunay"))
brothers <- c(which(str_detect(book, "[xs] d'Aunay")==TRUE))
book[brothers] <-  unlist(str_replace_all(book[brothers], "d'Aunay", "gautierdaunay philippedaunay"))
book <-  unlist(str_replace_all(book, "Saint Louis", "stlouis"))
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
book <-  unlist(str_replace_all(book, "Saint Louis", "stlouis"))
small <- c(which(str_detect(book, "Louis de")==TRUE),
which(str_detect(book, "Louis la")==TRUE),
which(str_detect(book, "Louis le")==TRUE))
all <- which(str_detect(book, "Louis de")==TRUE)
all <- which(str_detect(book, "Louis")==TRUE)
louisv <- all [! all %in% small]
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
characters
characters <- readLines("les_rois_maudits/characters/characters1.txt")
debugSource('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
bookpath = "les_rois_maudits/txt_processed_name/"
final_bookpath = "les_rois_maudits/final_txt/"
txtbook1 = "[Rois Maudits-1] Le Roi de fer - Druon,Maurice.txt"
source("preprocessing.R")
stopwords_fr_path <- "Stop-words-french-utf8.txt"
stopwords_fr <- readLines(stopwords_fr_path)
book1 <- prepare.text(file.path(bookpath,txtbook1),stopwords_fr)
dir.create(final_bookpath,showWarnings = F)
writeLines(book1, file.path(final_bookpath,txtbook1))
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
setwd("C:/Users/Hoai Thu Nguyen/Dropbox/DM/ASL/Projet")
path ="C:/Users/Hoai Thu Nguyen/Dropbox/DM/ASL/Projet/imagesets"
setwd(path)
files <- list.files(path)
path <- "C:/Users/Hoai Thu Nguyen/Dropbox/DM/ASL/Projet/imgsets/"
setwd(path)
files <- list.files(path)
img <- readLines(f)
img
files
f = files[1]
img <- readLines(f)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/ASL/Projet/rewrite_imgsets.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
roi
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/clean_characters1.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/main.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/main.R', echo=TRUE)
source('C:/Users/Hoai Thu Nguyen/Dropbox/DM/TM/Projet/main.R', echo=TRUE)
this.dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(this.dir)
desc <- read.table("VOC2005_1/DescSIFTS/Caltech_cars/cars_001.txt")
desc <- read.table("VOC2005_1/DescSIFTS/Caltech_cars/image_001.txt")
desc <- read.table("VOC2005_1/DescSIFTS/Caltech_cars/image_0001.txt")
norm(desc[1,])
norm_vec <- function(x) sqrt(sum(x^2))
norm(desc[1,])
norm_vec(desc[1,])
desc[1,]
max(desc)
norm_vec(desc[1,])
norm_vec(desc[2,])
(norm_vec(desc[2,]))*2
(norm_vec(desc[2,]))^2
(norm_vec(desc[1,]))^2
install.packages("imager")
rect(1,1,9,9)
rect(1,1,9,9)
plot.new()
rect(1,1,9,9)
plot(-10:20,-10:10,type="n")
plot(-10:20,-10:20,type="n")
rect(1,1,9,9)
this.dir <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(this.dir)
norm_vec <- function(x) sqrt(sum(x^2))
desc <- read.table("testdesc.txt")
desc <- read.table("test_desc.txt")
norm_vec(desc[1,])
max(desc)
sum(desc)
rowSum(desc)
rowSums(desc)
